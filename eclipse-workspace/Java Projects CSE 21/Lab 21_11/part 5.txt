1) 	a. ArrayList<Pomeranian> pomeranians = new ArrayList<Pomeranians>();
	b. ArrayList<Pet> pets = new ArrayList<pet>();
	c. ArrayList<Pet> pets = new ArrayList<pet>();
	d. ArrayList<GreatDane> Danes = new ArrayList<GreatDanes>();
	e. ArrayList<Pet> pets  = new ArrayList<Pet>();
	f.  ArrayList<Pet> pets  = new ArrayList<Pet>();

2)	Version 1 counts up to 4 then back down to 0
	Version 2 counts up to 5
	Version 3 only ever recurs once and only recurs when the initial value of k is 5. 
	Version 4 counts up to 4
	Version 5 is the same thing as version 3 except it displays the initial value of K
	Version 6 incrementally recurs until k is equal to 5, counting 5 times from 0 to 4

3)	yes. The recursive algorithm will work with any length of string
4) 	confident reversed should be tnedifnoc. The false output is ctnedifno
5)	digitCount(0) returns 1;
	digitCount(10) returns 2;
	digitCount(314159) returns 6;
	digitCount() returns 1 for values that are less than 10;